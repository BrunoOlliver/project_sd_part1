# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import buffer_pb2 as buffer__pb2


class GreeterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
                '/Client.Greeter/SayHello',
                request_serializer=buffer__pb2.HelloRequest.SerializeToString,
                response_deserializer=buffer__pb2.HelloReply.FromString,
                )
        self.SayHelloAgain = channel.unary_unary(
                '/Client.Greeter/SayHelloAgain',
                request_serializer=buffer__pb2.HelloRequest.SerializeToString,
                response_deserializer=buffer__pb2.HelloReply.FromString,
                )
        self.insertNewClient = channel.unary_unary(
                '/Client.Greeter/insertNewClient',
                request_serializer=buffer__pb2.InsertRequest.SerializeToString,
                response_deserializer=buffer__pb2.HelloReply.FromString,
                )
        self.updateClient = channel.unary_unary(
                '/Client.Greeter/updateClient',
                request_serializer=buffer__pb2.ModifyRequest.SerializeToString,
                response_deserializer=buffer__pb2.HelloReply.FromString,
                )
        self.findClient = channel.unary_unary(
                '/Client.Greeter/findClient',
                request_serializer=buffer__pb2.FindRequest.SerializeToString,
                response_deserializer=buffer__pb2.HelloReply.FromString,
                )
        self.deleteClient = channel.unary_unary(
                '/Client.Greeter/deleteClient',
                request_serializer=buffer__pb2.DeleteRequest.SerializeToString,
                response_deserializer=buffer__pb2.HelloReply.FromString,
                )


class GreeterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SayHello(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SayHelloAgain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def insertNewClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHello,
                    request_deserializer=buffer__pb2.HelloRequest.FromString,
                    response_serializer=buffer__pb2.HelloReply.SerializeToString,
            ),
            'SayHelloAgain': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHelloAgain,
                    request_deserializer=buffer__pb2.HelloRequest.FromString,
                    response_serializer=buffer__pb2.HelloReply.SerializeToString,
            ),
            'insertNewClient': grpc.unary_unary_rpc_method_handler(
                    servicer.insertNewClient,
                    request_deserializer=buffer__pb2.InsertRequest.FromString,
                    response_serializer=buffer__pb2.HelloReply.SerializeToString,
            ),
            'updateClient': grpc.unary_unary_rpc_method_handler(
                    servicer.updateClient,
                    request_deserializer=buffer__pb2.ModifyRequest.FromString,
                    response_serializer=buffer__pb2.HelloReply.SerializeToString,
            ),
            'findClient': grpc.unary_unary_rpc_method_handler(
                    servicer.findClient,
                    request_deserializer=buffer__pb2.FindRequest.FromString,
                    response_serializer=buffer__pb2.HelloReply.SerializeToString,
            ),
            'deleteClient': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteClient,
                    request_deserializer=buffer__pb2.DeleteRequest.FromString,
                    response_serializer=buffer__pb2.HelloReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Client.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Client.Greeter/SayHello',
            buffer__pb2.HelloRequest.SerializeToString,
            buffer__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SayHelloAgain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Client.Greeter/SayHelloAgain',
            buffer__pb2.HelloRequest.SerializeToString,
            buffer__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def insertNewClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Client.Greeter/insertNewClient',
            buffer__pb2.InsertRequest.SerializeToString,
            buffer__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Client.Greeter/updateClient',
            buffer__pb2.ModifyRequest.SerializeToString,
            buffer__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Client.Greeter/findClient',
            buffer__pb2.FindRequest.SerializeToString,
            buffer__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Client.Greeter/deleteClient',
            buffer__pb2.DeleteRequest.SerializeToString,
            buffer__pb2.HelloReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
