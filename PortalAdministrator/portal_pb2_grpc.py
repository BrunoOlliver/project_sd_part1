# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import portal_pb2 as portal__pb2


class GreeterStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Connecting = channel.unary_unary(
                '/portal.Greeter/Connecting',
                request_serializer=portal__pb2.ConectRequest.SerializeToString,
                response_deserializer=portal__pb2.ConectReply.FromString,
                )
        self.CheckUser = channel.unary_unary(
                '/portal.Greeter/CheckUser',
                request_serializer=portal__pb2.AdministratorRequest.SerializeToString,
                response_deserializer=portal__pb2.AdministratorReplay.FromString,
                )
        self.CheckOption = channel.unary_unary(
                '/portal.Greeter/CheckOption',
                request_serializer=portal__pb2.OptionRequest.SerializeToString,
                response_deserializer=portal__pb2.OptionReplay.FromString,
                )
        self.InsertNewClient = channel.unary_unary(
                '/portal.Greeter/InsertNewClient',
                request_serializer=portal__pb2.InsertClientRequest.SerializeToString,
                response_deserializer=portal__pb2.InsertClientReplay.FromString,
                )
        self.SearchClient = channel.unary_unary(
                '/portal.Greeter/SearchClient',
                request_serializer=portal__pb2.SearchClientRequest.SerializeToString,
                response_deserializer=portal__pb2.SearchClientReplay.FromString,
                )
        self.ListClients = channel.unary_unary(
                '/portal.Greeter/ListClients',
                request_serializer=portal__pb2.ListClientsRequest.SerializeToString,
                response_deserializer=portal__pb2.ListClientsReplay.FromString,
                )
        self.DeleteClient = channel.unary_unary(
                '/portal.Greeter/DeleteClient',
                request_serializer=portal__pb2.DeleteClientRequest.SerializeToString,
                response_deserializer=portal__pb2.DeleteClientReplay.FromString,
                )
        self.RemoveClients = channel.unary_unary(
                '/portal.Greeter/RemoveClients',
                request_serializer=portal__pb2.RemoveClientsRequest.SerializeToString,
                response_deserializer=portal__pb2.RemoveClientsReplay.FromString,
                )


class GreeterServicer(object):
    """The greeting service definition.
    """

    def Connecting(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckOption(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertNewClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListClients(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveClients(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Connecting': grpc.unary_unary_rpc_method_handler(
                    servicer.Connecting,
                    request_deserializer=portal__pb2.ConectRequest.FromString,
                    response_serializer=portal__pb2.ConectReply.SerializeToString,
            ),
            'CheckUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckUser,
                    request_deserializer=portal__pb2.AdministratorRequest.FromString,
                    response_serializer=portal__pb2.AdministratorReplay.SerializeToString,
            ),
            'CheckOption': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckOption,
                    request_deserializer=portal__pb2.OptionRequest.FromString,
                    response_serializer=portal__pb2.OptionReplay.SerializeToString,
            ),
            'InsertNewClient': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertNewClient,
                    request_deserializer=portal__pb2.InsertClientRequest.FromString,
                    response_serializer=portal__pb2.InsertClientReplay.SerializeToString,
            ),
            'SearchClient': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchClient,
                    request_deserializer=portal__pb2.SearchClientRequest.FromString,
                    response_serializer=portal__pb2.SearchClientReplay.SerializeToString,
            ),
            'ListClients': grpc.unary_unary_rpc_method_handler(
                    servicer.ListClients,
                    request_deserializer=portal__pb2.ListClientsRequest.FromString,
                    response_serializer=portal__pb2.ListClientsReplay.SerializeToString,
            ),
            'DeleteClient': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteClient,
                    request_deserializer=portal__pb2.DeleteClientRequest.FromString,
                    response_serializer=portal__pb2.DeleteClientReplay.SerializeToString,
            ),
            'RemoveClients': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveClients,
                    request_deserializer=portal__pb2.RemoveClientsRequest.FromString,
                    response_serializer=portal__pb2.RemoveClientsReplay.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'portal.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """The greeting service definition.
    """

    @staticmethod
    def Connecting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/portal.Greeter/Connecting',
            portal__pb2.ConectRequest.SerializeToString,
            portal__pb2.ConectReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/portal.Greeter/CheckUser',
            portal__pb2.AdministratorRequest.SerializeToString,
            portal__pb2.AdministratorReplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckOption(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/portal.Greeter/CheckOption',
            portal__pb2.OptionRequest.SerializeToString,
            portal__pb2.OptionReplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertNewClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/portal.Greeter/InsertNewClient',
            portal__pb2.InsertClientRequest.SerializeToString,
            portal__pb2.InsertClientReplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/portal.Greeter/SearchClient',
            portal__pb2.SearchClientRequest.SerializeToString,
            portal__pb2.SearchClientReplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListClients(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/portal.Greeter/ListClients',
            portal__pb2.ListClientsRequest.SerializeToString,
            portal__pb2.ListClientsReplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/portal.Greeter/DeleteClient',
            portal__pb2.DeleteClientRequest.SerializeToString,
            portal__pb2.DeleteClientReplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveClients(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/portal.Greeter/RemoveClients',
            portal__pb2.RemoveClientsRequest.SerializeToString,
            portal__pb2.RemoveClientsReplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
